[{"/Users/michaelwoodward/ProjectsJS/music-app/src/index.js":"1","/Users/michaelwoodward/ProjectsJS/music-app/src/reportWebVitals.js":"2","/Users/michaelwoodward/ProjectsJS/music-app/src/App.js":"3"},{"size":500,"mtime":1610631129785,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610631129786,"results":"6","hashOfConfig":"5"},{"size":2706,"mtime":1612904220338,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1jfqhl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/michaelwoodward/ProjectsJS/music-app/src/index.js",[],["16","17"],"/Users/michaelwoodward/ProjectsJS/music-app/src/reportWebVitals.js",[],"/Users/michaelwoodward/ProjectsJS/music-app/src/App.js",["18","19"],"\nimport { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n// import Fetch from \"react-fetch\";\n\nfunction App() {\n  const [songs, setSongs] = useState(null);\n  const [lyrics, setLyrics] = useState(null);\n  const apiURL = 'https://api.lyrics.ovh';\n\n  async function submit() {\n    setLyrics(null);\n    const searchInput = document.getElementById(\"search\");\n    const term = searchInput.value.trim();\n    await fetch(apiURL + '/suggest/' + term)\n    .then(res => res.json())\n    .then(data => setSongs(data));\n  }\n\n  async function songButton(artist, songTitle) {\n    await fetch(apiURL + \"/v1/\" + artist + \"/\" + songTitle)\n    .then(res => res.json())\n    .then(data => {\n      // todo -> Need to fix this dynamic break\n      const lyrics = data.lyrics.replace(/(\\r\\n|\\r|\\n)/g, `<br>`);\n      setLyrics(lyrics);\n    });\n  }\n  \n  async function clearResults() {\n    setSongs(null);\n    setLyrics(null);\n  }\n\n  async function getMoreSongs(url) {\n    // await fetch(url)\n    await fetch(\"https://cors-anywhere.herokuapp.com/\" + url)\n    .then(res => res.json())\n    .then(data => console.info(data));\n    // .then(data => setSongs(data));\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"form\">\n          <input type=\"text\" id=\"search\" placeholder=\"Find a song!\" />\n          <button className=\"search-btn\" onClick={submit}>Search</button>\n          {/* <button className=\"clear-btn\" onClick={clearResults}>Clear</button> */}\n        </div>\n      </header>\n      <div className=\"container\">\n        {!lyrics ?\n          <ul className=\"songs\">\n            {!songs ? \"Enter a search to find songs!\" :\n              songs.data.map((songs) => (\n                <li key={songs.id} style={{listStyleType:'none', indent:\"none\"}}>\n                  <span><strong>{songs.title}</strong> - {songs.artist.name}</span>\n                  <button className=\"btn\" onClick={() => songButton(songs.artist.name, songs.title)}>\n                    Get Lyrics\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n          : \"\" \n        }\n      </div>\n      <div className=\"container centered\">\n        {!lyrics ? \"\" : <p>{lyrics}</p>}\n      </div>\n      {/* todo -> need to fix prev and next buttons when available */}\n      {/* {!lyrics && songs.prev ? \n        <button className=\"btn\" onClick={() => getMoreSongs(songs.prev)}>Prev</button>\n        : \"\"\n      }\n      {!lyrics && songs.next ? \n        <button className=\"btn\" onClick={() => getMoreSongs(songs.next)}>Next</button>\n        : \"\"\n      } */}\n    </div>\n  );\n}\n\nexport default App;",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":31,"column":18,"nodeType":"26","messageId":"27","endLine":31,"endColumn":30},{"ruleId":"24","severity":1,"message":"28","line":36,"column":18,"nodeType":"26","messageId":"27","endLine":36,"endColumn":30},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'clearResults' is defined but never used.","Identifier","unusedVar","'getMoreSongs' is defined but never used.","no-global-assign","no-unsafe-negation"]